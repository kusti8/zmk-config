/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = < 19 20 >;
            layers = <0>;
            bindings = <&kp ESC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = < 15 16 >;
            layers = <0>;
            bindings = <&kp TAB>;
        };
        combo_btclr {
            timeout-ms = <50>;
            key-positions = < 12 13 >; // middle row, left 2
            layers = <1>;
            bindings = <&bt BT_CLR>;
        };
        combo_suspendleft {
            timeout-ms = <50>;
            key-positions = < 0 12 >; // top left and one below it
            layers = <1 2>;
            bindings = <&suspend>;
        };
        combo_suspendright {
            timeout-ms = <50>;
            key-positions = < 11 23 >; // top right and one below it
            layers = <1 2>;
            bindings = <&suspend>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT  |
//                    | GUI | LWR | ENT |   | SPC | RSE  | ESC |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RALT
                  &kp LGUI &mo 1 &kp RET     &kp SPC &mo 2 &kp RSHFT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// |      |     | LFT | RGT | UP  | [   |   |  ]  | DWN |  UP | RGT |     | \ |
// |      | BT1 | BT2 | BT3 | DWN |  {  |   |  }  |     |     |     |     |      |
//                    | GUI |     |     |   |     |     | GRAVE |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BKSP
   &trans    &trans       &kp LEFT     &kp RIGHT    &kp UP       &kp LBKT       &kp RBKT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &kp DOWN     &kp LBRC       &kp RBRC   &trans   &trans &trans    &trans &trans
                          	        &kp LGUI     &trans       &trans             &trans   &trans   &kp GRAVE
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |  _  |   |  =  |  =  |     |     |     |  |   |
// | SHFT |     |     |     |     |  -  |   |  +  |  +  |     |     |     |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ~ |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &kp UNDERSCORE      &kp EQUAL &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp PIPE
   &kp LSHFT &trans   &trans &trans   &trans   &kp MINUS      &kp PLUS &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp TILDE
                        >;
                };
        };
};
